#C++ Include Locations
THIRDPARTY_DIR=..$(OS_PATH_SEP)..$(OS_PATH_SEP)..$(OS_PATH_SEP)ThirdParty
INIPARSER_DIR=$(THIRDPARTY_DIR)$(OS_PATH_SEP)iniparser
JAVAINCLUDE_DIR=$(JAVA_HOME)$(OS_PATH_SEP)include
GRAVLIB_DIR=..$(OS_PATH_SEP)cpp

#C++ Wrapper source dir
CPPSRC_DIR_MAKE=src/cpp/
CPPSRC_DIR_OS=src$(OS_PATH_SEP)cpp$(OS_PATH_SEP)

#Tools
PROTOC=../../../ThirdParty/bin/protoc
CC=g++
LINK=g++

#Default C++ Compiler Options (g++)
INCLUDES=-I$(GRAVLIB_DIR) -I$(THIRDPARTY_DIR)/include -I$(INIPARSER_DIR)/src -I$(JAVAINCLUDE_DIR) $(OS_SPECIFIC_INCS)
LIBDIRS=-L$(GRAVLIB_DIR) -L$(THIRDPARTY_DIR)/lib
LIBS=$(COMPLIER_SPECIFIC_LIBS)
COMPLIER_SPECIFIC_LIBS=$(GCC_LIBS) $(OS_SPECIFIC_LIBS)
GCC_LIBS=-lgravity -lprotobuf -liniparser -lzmq
COMPILE_FLAG=-c
COUTPUT_FLAG=-o
OUTPUT_FLAG=-o
LINK_FLAGS=-shared

OBJ_EXT=o
OS_PATH_SEP=/

#Source/Object/Dependancies (all swig auto generated sources should have been built by now).  
#'wildcard' needs UNIX path seperators
CPP_SRC=$(wildcard $(CPPSRC_DIR_MAKE)*.cpp)
#but Microsoft tools need Windows path separators... so substitute them here!  
CPP_OBJ=$(patsubst $(CPPSRC_DIR_MAKE)%.cpp,$(CPPSRC_DIR_OS)%.$(OBJ_EXT),$(CPP_SRC))

SYSTEM:=$(strip $(shell uname -s))
ifneq (,$(findstring MINGW32_NT,$(SYSTEM)))
#MinGW
	#OS_SPECIFIC_LIBS = -lwsock32 -lpthread
	#OS_SPECIFIC_INCS=-I$(JAVAINCLUDE_DIR)/win32
	#OS_SPECIFIC_LIBFLAGS=-D_JNI_IMPLEMENTATION_ -Wl,--kill-at
	#LIB_EXT=dll
#Visual Studio
	-include makefile.vs
windows: all;
else ifneq (,$(findstring Linux,$(SYSTEM)))
	OS_SPECIFIC_LIBS = -lrt 
	OS_SPECIFIC_INCS=-I$(JAVAINCLUDE_DIR)/linux
	OS_SPECIFIC_FLAGS=-fPIC
	LIB_EXT=so
linux: all;
else
	ostype: ; @echo "ERROR UNKNOWN OS: " $(SYSTEM);
endif

all: libgravity_wrap.$(LIB_EXT)

%.$(OBJ_EXT): %.cpp
	@echo $(CC) $<
	$(CC) $(COMPILE_FLAG) $(OS_SPECIFIC_FLAGS) $(INCLUDES) $(COUTPUT_FLAG)$@ $<

libgravity_wrap.$(LIB_EXT): $(CPP_OBJ)
	@echo building $(LIB_NAME).$(LIB_EXT)
	@$(LINK) $(LINK_FLAGS) $(LIBDIRS) $(OUTPUT_FLAG)$@ $(CPP_OBJ) $(LIBS)
	
clean:
	rm -rf $(CPPSRC_DIR_MAKE)*.$(OBJ_EXT) *.so *.dll *.$(OBJ_EXT)
	