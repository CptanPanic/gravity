#CROSS= arm-angstrom-linux-gnueabi-
CXX=$(CROSS)g++
CC=$(CROSS)gcc
THIRDPARTY_DIR=../../../../ThirdParty
SQLLIB_DIR=$(THIRDPARTY_DIR)/cppdb-trunk
GRAVLIB_DIR=../../../api/cpp
MYPROTO_DIR=protobufs
PROTOC=$(THIRDPARTY_DIR)/bin/protoc
PROG_NAME=$(notdir $(shell pwd) )


#OS Specific
SYSTEM:=$(strip $(shell uname -s))
#SYSTEM:=LINUX
#SYSTEM=MINGW32_NT-6.1
#WARNING: DON'T PUT SPACES OR QUOTES IN COMPARISON STRING!!!
ifneq (,$(findstring MINGW32_NT,$(SYSTEM)))
	OS_SPECIFIC_LIBS = -lwsock32 -lpthread
	BUILD_VARIANT_DIRECTIVE=-DWIN32
windows: all;
else ifneq (,$(findstring Linux,$(SYSTEM)))
	OS_SPECIFIC_LIBS = -lrt
linux: all;
else
ostype: ; @echo "ERROR UNKNOWN OS: " $(SYSTEM);
endif

INCLUDES=-I$(GRAVLIB_DIR) -I$(MYPROTO_DIR) -I$(THIRDPARTY_DIR)/include -I$(SQLLIB_DIR) $(ADDITIONAL_INCLUDES)
CFLAGS=-L$(GRAVLIB_DIR) -L$(THIRDPARTY_DIR)/lib 

LIBS= -lgravity $(OS_SPECIFIC_LIBS) $(ADDITIONAL_LIBS)

SRC=$(wildcard *.cpp)
OBJECTS=$(patsubst %.cpp,%.o,$(SRC))
DEPS=$(wildcard *.h $(MYPROTO_DIR)/*.h)

PROTO_SRC=$(wildcard $(MYPROTO_DIR)/*.proto)
PROTO_CODE=$(patsubst $(MYPROTO_DIR)/%.proto,$(MYPROTO_DIR)/%.pb.cc,$(PROTO_SRC))
PROTO_OBJ=$(patsubst $(MYPROTO_DIR)/%.cc,$(MYPROTO_DIR)/%.o,$(PROTO_CODE))

all: $(PROG_NAME) 

%.pb.cc:%.proto
	$(PROTOC) --proto_path=$(MYPROTO_DIR) --cpp_out=$(MYPROTO_DIR) $<

%.pb.o:%.pb.cc
	$(CC) $(BUILD_VARIANT_DIRECTIVE) -g -c -o $@ $< $(INCLUDES)

%.o:%.cpp $(DEPS)
	$(CC) $(BUILD_VARIANT_DIRECTIVE) -g -c -o $@ $< $(INCLUDES)

$(PROG_NAME): $(PROTO_OBJ) $(OBJECTS) $(GRAVLIB_DIR)/libgravity.a
	$(CC) $(BUILD_VARIANT_DIRECTIVE) -o $@ $(PROTO_OBJ) $(OBJECTS) $(CFLAGS) $(LIBS)

clean:
	@rm -rf *.o $(MYPROTO_DIR)/*.o $(MYPROTO_DIR)/*.h $(MYPROTO_DIR)/*.cc $(PROG_NAME)
