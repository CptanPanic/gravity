
CC=g++
THIRDPARTY_DIR=../../../../ThirdParty
INIPARSE_DIR=$(THIRDPARTY_DIR)/iniparser
ZMQ_DIR=$(THIRDPARTY_DIR)/zeromq-3.2.0
PROTOBUF_DIR=$(THIRDPARTY_DIR)/protobuf-2.4.1
CXXTEST_DIR=$(THIRDPARTY_DIR)/cxxtest
GRAVLIB_DIR=../../../../src/api/cpp
CXXTESTGEN=$(CXXTEST_DIR)/bin/cxxtestgen
PROG_NAME=$(notdir $(shell pwd) )
TEST_NAME=$(PROG_NAME)Test

INCLUDES=-I$(GRAVLIB_DIR) -I$(ZMQ_DIR)/include -I$(CXXTEST_DIR) -I$(PROTOBUF_DIR)/src
CFLAGS=$(INCLUDES) -L$(GRAVLIB_DIR) -L$(ZMQ_DIR)/src/.libs -L$(PROTOBUF_DIR)/src/.libs -L$(INIPARSE_DIR)
LIBS=-Wl,-Bstatic -lgravity -lzmq -lprotobuf -liniparser -Wl,-Bdynamic -lrt

TEST_SRC=$(wildcard *.h)
SRC=$(wildcard *.cpp)
ifeq (,$(findstring runner.cpp,$(SRC)))
    SRC := runner.cpp $(SRC)
endif
OBJECTS=$(patsubst %.cpp,%.o,$(SRC))

all: $(TEST_NAME) 

runner.cpp: $(TEST_SRC)
	$(CXXTESTGEN) --error-printer -o runner.cpp $^

%.o:%.cpp $(DEPS)
	$(CC) -c -o $@ $< $(CFLAGS)
	
$(TEST_NAME): $(OBJECTS)
	$(CC) -o $@ $(OBJECTS) $(CFLAGS) $(LIBS)

test: $(TEST_NAME)
	PATH=$(PATH):../../../../src/components/cpp/$(PROG_NAME) ./$^

clean:
	@rm -rf $(TEST_NAME) *.o runner.cpp
