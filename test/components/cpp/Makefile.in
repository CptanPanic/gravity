CC=g++
THIRDPARTY_DIR=../../../../ThirdParty
KEYVALUE_PARSER_DIR=../../../../src/keyvalue_parser
ZMQ_DIR=$(THIRDPARTY_DIR)/zeromq-3.2.0
GRAVLIB_DIR=../../../../src/api/cpp
COMPONENTS_BIN_DIR=../../../../src/components/cpp/bin
GRAVTEST_DIR=../../../
PROG_NAME=$(notdir $(shell pwd) )

INCLUDES=-I$(GRAVLIB_DIR) -I$(ZMQ_DIR)/include -I$(THIRDPARTY_DIR)/include -I$(GRAVTEST_DIR)
CFLAGS=$(INCLUDES) -L$(GRAVLIB_DIR) -L$(THIRDPARTY_DIR)/lib -L$(KEYVALUE_PARSER_DIR)
SYSTEM:=$(strip $(shell uname -s))
ifneq (,$(findstring MINGW32_NT,$(SYSTEM)))
        OS_SPECIFIC_LIBS = -lwsock32 -lpthread
        TEST_NAME=$(PROG_NAME)Test.exe
	PATH:=${PATH}:$(COMPONENTS_BIN_DIR):$(THIRDPARTY_DIR)/bin
windows: all;
else ifneq (,$(findstring Linux,$(SYSTEM)))
        OS_SPECIFIC_LIBS = -lrt
        TEST_NAME=$(PROG_NAME)Test
	PATH:=${PATH}:$(COMPONENTS_BIN_DIR)
linux: all;
else
ostype: ; @echo "ERROR UNKNOWN OS: " $(SYSTEM);
endif
LIBS=-lgravity -lprotobuf -lkeyvalue_parser -lzmq $(OS_SPECIFIC_LIBS) $(ADDITIONAL_LIBS)

TEST_SRC=$(wildcard *.h)
SRC=$(wildcard *.cpp)
OBJECTS=$(patsubst %.cpp,%.o,$(SRC))

all: $(TEST_NAME) 

%.o:%.cpp $(DEPS)
	$(CC) -c -o $@ $< $(CFLAGS)
	
$(TEST_NAME): $(OBJECTS)
	$(CC) -o $@ $(OBJECTS) $(CFLAGS) $(LIBS)

test: $(TEST_NAME)
	./$^

clean:
	@rm -rf $(TEST_NAME) *.o runner.cpp
